"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5324],{3905:(e,t,s)=>{s.d(t,{Zo:()=>p,kt:()=>f});var n=s(67294);function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function a(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?r(Object(s),!0).forEach((function(t){i(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):r(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function l(e,t){if(null==e)return{};var s,n,i=function(e,t){if(null==e)return{};var s,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||(i[s]=e[s]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)s=r[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(i[s]=e[s])}return i}var o=n.createContext({}),c=function(e){var t=n.useContext(o),s=t;return e&&(s="function"==typeof e?e(t):a(a({},t),e)),s},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var s=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(s),d=i,f=m["".concat(o,".").concat(d)]||m[d]||u[d]||r;return s?n.createElement(f,a(a({ref:t},p),{},{components:s})):n.createElement(f,a({ref:t},p))}));function f(e,t){var s=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=s.length,a=new Array(r);a[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=s[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,s)}d.displayName="MDXCreateElement"},22999:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=s(87462),i=(s(67294),s(3905));const r={title:"SST_ELI_DOCUMENT_STATISTICS",sidebar_label:"Statistics"},a=void 0,l={unversionedId:"core/eli/document/sst_eli_document_statistics",id:"core/eli/document/sst_eli_document_statistics",title:"SST_ELI_DOCUMENT_STATISTICS",description:"Availability: Components, SubComponents",source:"@site/../docs/core/eli/document/sst_eli_document_statistics.md",sourceDirName:"core/eli/document",slug:"/core/eli/document/sst_eli_document_statistics",permalink:"/sst-docs/docs/core/eli/document/sst_eli_document_statistics",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/eli/document/sst_eli_document_statistics.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"SST_ELI_DOCUMENT_STATISTICS",sidebar_label:"Statistics"},sidebar:"core",previous:{title:"Profile points",permalink:"/sst-docs/docs/core/eli/document/sst_eli_document_profile_points"},next:{title:"SubComponent Slots",permalink:"/sst-docs/docs/core/eli/document/sst_eli_document_subcomponent_slots"}},o={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Header",id:"header",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...s}=e;return(0,i.kt)(m,(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#define SST_ELI_DOCUMENT_STATISTICS( \n    { "stat_0", "description", "units", enable_level },\n    { "stat_1", "description", "units", enable_level },\n    ...\n    { "stat_x", "description", "units", enable_level }\n)\n')),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Availability:")," Components, SubComponents"),(0,i.kt)("admonition",{title:"Important",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," section of the object's header file.")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"stat_x")," (string) Name of the statistic"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"description")," (string) Description of the statistic. This value is displayed when sst-info is run at the command line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"units")," (string) Units for the statistic's value. For example 'cycles' or 'MB'. This value is displayed when sst-info is run at the command line."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"enable_level")," (int) Integer between 1 and 7. The statistic will be generated if the user configures the simulation enable level to be greater than or equal to this number.")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"example-1"},"Example 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/example1.h"',title:'"Excerpt',from:!0,'sst-elements/src/sst/elements/simpleElementExample/example1.h"':!0},'SST_ELI_DOCUMENT_STATISTICS( \n    {"EventSizeReceived", "Records the payload size of each event received", "bytes", 1}\n)\n')),(0,i.kt)("h3",{id:"example-2"},"Example 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicStatistics.h"',title:'"Excerpt',from:!0,'sst-elements/src/sst/elements/simpleElementExample/basicStatistics.h"':!0},'SST_ELI_DOCUMENT_STATISTICS(\n    {"UINT32_statistic", "Statistic that records unsigned 32-bit values", "unitless", 1},\n    {"UINT32_statistic_duplicate", "Statistic that records unsigned 32-bit values. Multiple stats record values to this statistic.", "unitless", 1},\n    {"UINT64_statistic", "Statistic that records unsigned 64-bit values", "unitless", 2},\n    {"INT32_statistic",  "Statistic that records signed 32-bit values", "unitless", 3},\n    {"INT64_statistic",  "Statistic that records signed 64-bit values", "unitless", 3},\n    {"SUBID_statistic", "Statistic to demonstrate SubIDs to obtain multiple instances of the same statistic name. Type is double.", "unitless", 4},\n)\n')),(0,i.kt)("h2",{id:"header"},"Header"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h>\n")))}u.isMDXComponent=!0}}]);