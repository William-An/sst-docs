"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3410],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=a.createContext({}),i=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=i(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=i(r),d=n,f=u["".concat(o,".").concat(d)]||u[d]||c[d]||l;return r?a.createElement(f,s(s({ref:t},m),{},{components:r})):a.createElement(f,s({ref:t},m))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,s=new Array(l);s[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:n,s[1]=p;for(var i=2;i<l;i++)s[i]=r[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8010:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>d,frontMatter:()=>p,metadata:()=>i,toc:()=>c});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),s=["components"],p={id:"sst_eli_document_params",title:"SST_ELI_DOCUMENT_PARAMS"},o=void 0,i={unversionedId:"cpp/eli/sst_eli_document_params",id:"cpp/eli/sst_eli_document_params",title:"SST_ELI_DOCUMENT_PARAMS",description:"Fully Qualified Name",source:"@site/../docs/cpp/eli/sst_eli_document_params.md",sourceDirName:"cpp/eli",slug:"/cpp/eli/sst_eli_document_params",permalink:"/sst-website/docs/cpp/eli/sst_eli_document_params",draft:!1,editUrl:"https://github.com/sstsimulator/sst-website/edit/master/docs/../docs/cpp/eli/sst_eli_document_params.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1666128058,formattedLastUpdatedAt:"Oct 18, 2022",frontMatter:{id:"sst_eli_document_params",title:"SST_ELI_DOCUMENT_PARAMS"},sidebar:"C++",previous:{title:"setup()",permalink:"/sst-website/docs/cpp/component/setup"},next:{title:"SST_ELI_DOCUMENT_PORTS",permalink:"/sst-website/docs/cpp/eli/sst_eli_document_ports"}},m={},c=[{value:"Fully Qualified Name",id:"fully-qualified-name",level:2},{value:"Remarks",id:"remarks",level:3},{value:"Requirements",id:"requirements",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"See Also",id:"see-also",level:2}],u={toc:c};function d(e){var t=e.components,r=(0,n.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"fully-qualified-name"},"Fully Qualified Name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#define SST_ELI_DOCUMENT_PARAMS ( ... ) \n")),(0,l.kt)("h3",{id:"remarks"},"Remarks"),(0,l.kt)("p",null,"Document and register all the parameters of a component or subcomponent."),(0,l.kt)("h2",{id:"requirements"},"Requirements"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/elementinfo.h>\n")),(0,l.kt)("h2",{id:"syntax"},"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'SST_ELI_DOCUMENT_PARAMS(\n    { "parm1_NAME", "parm1_DESCRIPTION", "parm1_DEFAULT_VALUE" },\n    { "parm2_NAME", "parm2_DESCRIPTION", "parm2_DEFAULT_VALUE" },\n    { "parm3_NAME", "parm3_DESCRIPTION", "parm3_DEFAULT_VALUE" },\n    ...\n    { "parmN_NAME", "parmN_DESCRIPTION", "parmN_DEFAULT_VALUE" }\n)\n')),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parmN_NAME")," - The name of the parameter. This is the value passed into the ",(0,l.kt)("a",{parentName:"p",href:"/sst-website/docs/projectDriver/component/addParams"},"addParams")," function in the Configuration."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parmN_DESCRIPTION")," - A description of the param. This value is shown when you run sst-info in the command line."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"parmN_DEFAULT_VALUE")," - Shows or describes the default value for the parameter."),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'SST_ELI_DOCUMENT_PARAMS(\n        { "size", "Size of the bay (1 = small, 2 = large)", "1" },\n        { "smallCarWashTime", "How long to wash a small car (ticks)", "3" },\n        { "largeCarWashTime", "How long to wash a large car (ticks)", "5" }\n    )\n')),(0,l.kt)("h2",{id:"see-also"},"See Also"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/sst-website/docs/projectDriver/component/addParams"},"addParams"))))}d.isMDXComponent=!0}}]);