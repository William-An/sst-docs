"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7127],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return n?o.createElement(f,l(l({ref:t},p),{},{components:n})):o.createElement(f,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[m]="string"==typeof e?e:r,l[1]=a;for(var c=2;c<s;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},54451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const s={title:"SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS",sidebar_label:"SubComponent Slots"},l=void 0,a={unversionedId:"core/eli/document/sst_eli_document_subcomponent_slots",id:"core/eli/document/sst_eli_document_subcomponent_slots",title:"SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS",description:"List of slots that the (sub)component exposes. A single slot can have multiple subcomponents assigned to it. SST does not allow subcomponents to be loaded into slots that are not documented with this macro.",source:"@site/../docs/core/eli/document/sst_eli_document_subcomponent_slots.md",sourceDirName:"core/eli/document",slug:"/core/eli/document/sst_eli_document_subcomponent_slots",permalink:"/sst-docs/docs/core/eli/document/sst_eli_document_subcomponent_slots",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/eli/document/sst_eli_document_subcomponent_slots.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS",sidebar_label:"SubComponent Slots"},sidebar:"core",previous:{title:"Statistics",permalink:"/sst-docs/docs/core/eli/document/sst_eli_document_statistics"},next:{title:"Delete",permalink:"/sst-docs/docs/category/delete"}},i={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#define SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS( \n    { "slot_name_0", "description", "Fully::Qualified::SubComponent::API" },\n    { "slot_name_1", "description", "Fully::Qualified::SubComponent::API" },\n    ...\n    { "slot_name_x", "description", "Fully::Qualified::SubComponent::API" }\n )\n')),(0,r.kt)("p",null,"List of slots that the (sub)component exposes. A single slot can have multiple subcomponents assigned to it. SST does not allow subcomponents to be loaded into slots that are not documented with this macro."),(0,r.kt)("admonition",{title:"Important",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," section of the object's header file.")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"slot_name_x")," (string) A name for the slot."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"description")," (string) A description of the purpose and/or use of the slot."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"API")," (string) The fully qualified name of the SubComponent API that this slot expects. Any subcomponent loaded into the slot must implement the named API.")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicSubComponent_component.h"',title:'"Excerpt',from:!0,'sst-elements/src/sst/elements/simpleElementExample/basicSubComponent_component.h"':!0},'SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS(\n    { "compute_unit", \n    "The compute unit that this component will use to operate on events",\n    "SST::simpleElementExample::basicSubComponentAPI"}\n)\n')),(0,r.kt)("h2",{id:"header"},"Header"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h>\n")))}u.isMDXComponent=!0}}]);