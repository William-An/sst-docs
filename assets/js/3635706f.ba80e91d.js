"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||a;return n?r.createElement(h,i(i({ref:t},m),{},{components:n})):r.createElement(h,i({ref:t},m))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},28094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"thornhill"},i=void 0,l={unversionedId:"elements/thornhill/intro",id:"elements/thornhill/intro",title:"thornhill",description:"Thornhill is part of an experimental capability to use detailed compute and memory models together with Ember motifs in network simulations. Thornhill provides an interface to a the Miranda CPU model and the coordination of the memory heap for a modeled node.",source:"@site/../docs/elements/thornhill/intro.md",sourceDirName:"elements/thornhill",slug:"/elements/thornhill/intro",permalink:"/sst-docs/docs/elements/thornhill/intro",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/elements/thornhill/intro.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1695940750,formattedLastUpdatedAt:"Sep 28, 2023",frontMatter:{title:"thornhill"},sidebar:"elements",previous:{title:"simpleSimulation",permalink:"/sst-docs/docs/elements/simpleSimulation/intro"},next:{title:"vanadis",permalink:"/sst-docs/docs/elements/vanadis/intro"}},s={},p=[{value:"Required dependencies",id:"required-dependencies",level:3},{value:"Optional dependencies",id:"optional-dependencies",level:3}],m={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Thornhill")," is part of an experimental capability to use detailed compute and memory models together with ",(0,o.kt)("a",{parentName:"p",href:"../ember/intro"},"Ember")," motifs in network simulations. Thornhill provides an interface to a the ",(0,o.kt)("a",{parentName:"p",href:"../miranda/intro"},"Miranda")," CPU model and the coordination of the memory heap for a modeled node."),(0,o.kt)("admonition",{title:"At a Glance",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Source Code:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/thornhill"},"sst-elements/.../thornhill")," ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"SST Name:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"thornhill")," ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Maturity Level:")," Early Development (1) ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Development Path:")," Maintenance ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Last Released:")," SST 13.0")),(0,o.kt)("h3",{id:"required-dependencies"},"Required dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Miranda")," Thornhill is directly integrated to the SST-Elements ",(0,o.kt)("a",{parentName:"li",href:"../miranda/intro"},"Miranda")," processor model.")),(0,o.kt)("h3",{id:"optional-dependencies"},"Optional dependencies"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"None")))}c.isMDXComponent=!0}}]);