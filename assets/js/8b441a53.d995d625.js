"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2567],{14454:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var s=t(85893),i=t(11151);const r={title:"sendInitData"},d=void 0,a={id:"core/iface/SimpleNetwork/sendInitData",title:"sendInitData",description:"This function is deprecated as of SST 13 and will be removed in SST 14. Use sendUntimedData instead.",source:"@site/../docs/core/iface/SimpleNetwork/sendInitData.md",sourceDirName:"core/iface/SimpleNetwork",slug:"/core/iface/SimpleNetwork/sendInitData",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/sendInitData",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/SimpleNetwork/sendInitData.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1702928554,formattedLastUpdatedAt:"Dec 18, 2023",frontMatter:{title:"sendInitData"},sidebar:"core",previous:{title:"send",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/send"},next:{title:"sendUntimedData",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/sendUntimedData"}},c={},o=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Parameters",id:"parameters-1",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{title:"Deprecated",type:"warning",children:(0,s.jsxs)(n.p,{children:["This function is deprecated as of SST 13 and will be removed in SST 14. Use ",(0,s.jsx)(n.a,{href:"sendUntimedData",children:"sendUntimedData"})," instead."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"void sendInitData(Request* req);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This function is deprecated in favor of ",(0,s.jsx)(n.a,{href:"sendUntimedData",children:"sendUntimedData"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Network interface"})," \xa0",(0,s.jsx)(n.br,{}),"\n","May implement this function during the deprecation period. Interfaces ",(0,s.jsx)(n.em,{children:"must"})," implement at least one of ",(0,s.jsx)(n.code,{children:"sendInitData()"})," and ",(0,s.jsx)(n.code,{children:"sendUntimedData()"}),". In SST 14, interfaces will be required to implement ",(0,s.jsx)(n.code,{children:"sendUntimedData()"})," and ",(0,s.jsx)(n.code,{children:"sendInitData()"})," will be removed."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"})," \xa0",(0,s.jsx)(n.br,{}),"\n","May optionally use this function during ",(0,s.jsx)(n.code,{children:"init()"})," and ",(0,s.jsx)(n.code,{children:"complete()"})," to send events over the network. Must ",(0,s.jsx)(n.em,{children:"not"})," call this function during ",(0,s.jsx)(n.code,{children:"init()"})," until ",(0,s.jsx)(n.code,{children:"isNetworkInitialized()"})," returns ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"returns"})," (Request*) A request if one was received, otherwise nullptr. The caller is responsible for deleting any Request returned."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"req"})," (Request*) A ",(0,s.jsx)(n.a,{href:"Request",children:"Request"})," to send"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"',children:"void LinkControl::sendInitData(SST::Interfaces::SimpleNetwork::Request* req)\n{\n    sendUntimedData(req); // Redirect to the sendUntimedData function\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/interfaces/simpleNetwork.h>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>d});var s=t(67294);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);