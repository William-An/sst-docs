"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2260],{23682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var a=n(85893),r=n(11151);const l={title:"getDoubleValue"},s=void 0,o={id:"core/unitalgebra/getDoubleValue",title:"getDoubleValue",description:"Return the value portion of the UnitAlgebra as a double. This discards the units and returns the value in its base units (without SI prefixes). For example, calling getDoubleValue() on a unit algebra of 4KB will return 4000.0.",source:"@site/../docs/core/unitalgebra/getDoubleValue.md",sourceDirName:"core/unitalgebra",slug:"/core/unitalgebra/getDoubleValue",permalink:"/sst-docs/docs/core/unitalgebra/getDoubleValue",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/unitalgebra/getDoubleValue.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"getDoubleValue"},sidebar:"core",previous:{title:"invert",permalink:"/sst-docs/docs/core/unitalgebra/invert"},next:{title:"getRoundedValue",permalink:"/sst-docs/docs/core/unitalgebra/getRoundedValue"}},u={},i=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function c(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"double getDoubleValue() const;\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Return the value portion of the UnitAlgebra as a double. This discards the units and returns the value in its base units (without SI prefixes). For example, calling ",(0,a.jsx)(t.code,{children:"getDoubleValue()"})," on a unit algebra of ",(0,a.jsx)(t.code,{children:"4KB"})," will return ",(0,a.jsx)(t.code,{children:"4000.0"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"returns"})," (double) The value portion of the UnitAlgebra as a double."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:'SST::UnitAlgebra* num = new UnitAlgebra("5ms");\ndouble sec = num->getDoubleValue();\n// sec = 0.005\n'})}),"\n",(0,a.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/unitalgebra.h>\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>s});var a=n(67294);const r={},l=a.createContext(r);function s(e){const t=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);