"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1521],{34034:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=n(85893),a=n(11151);const r={title:"setDefaultTimeBase"},o=void 0,i={id:"core/component/time/setDefaultTimeBase",title:"setDefaultTimeBase",description:"Availability: Component, SubComponent, ComponentExtension",source:"@site/../docs/core/component/time/setDefaultTimeBase.md",sourceDirName:"core/component/time",slug:"/core/component/time/setDefaultTimeBase",permalink:"/sst-docs/docs/core/component/time/setDefaultTimeBase",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/component/time/setDefaultTimeBase.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"setDefaultTimeBase"},sidebar:"core",previous:{title:"registerTimeBase",permalink:"/sst-docs/docs/core/component/time/registerTimeBase"},next:{title:"getDefaultTimeBase",permalink:"/sst-docs/docs/core/component/time/getDefaultTimeBase"}},c={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function m(e){const t={code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"void setDefaultTimeBase(TimeConverter* base);\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"Availability:"})," Component, SubComponent, ComponentExtension"]}),"\n",(0,s.jsx)(t.p,{children:"Sets the calling (Sub)Component's default time base to the specified base."}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"base"})," (TimeConverter*) TimeConverter specifying the new default time base"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"returns"})," None"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/memHierarchy/standardInterface.cc"',children:"StandardInterface::StandardInterface(SST::ComponentId_t id, Params& params, TimeConverter* time,\n    HandlerBase* handler) : StandardMem(id, params, time, handler)\n{\n    setDefaultTimeBase(time); // This subcomponent does not have its own timebase, use the parent's\n\n    /** Remaining configuration here */\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h> // or\n#include <sst/core/componentExtension.h>\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var s=n(67294);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);