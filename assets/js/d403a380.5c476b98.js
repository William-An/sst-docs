"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2260],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),s=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(r),m=n,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||l;return r?a.createElement(b,o(o({ref:t},c),{},{components:r})):a.createElement(b,o({ref:t},c))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[p]="string"==typeof e?e:n,o[1]=u;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7949:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>b,frontMatter:()=>u,metadata:()=>s,toc:()=>p});var a=r(7462),n=r(3366),l=(r(7294),r(3905)),o=["components"],u={title:"getDoubleValue"},i=void 0,s={unversionedId:"core/unitalgebra/getDoubleValue",id:"core/unitalgebra/getDoubleValue",title:"getDoubleValue",description:"Return the value portion of the UnitAlgebra as a double. This discards the units and returns the value in its base units (without SI prefixes). For example, calling getDoubleValue() on a unit algebra of 4KB will return 4000.0.",source:"@site/../docs/core/unitalgebra/getDoubleValue.md",sourceDirName:"core/unitalgebra",slug:"/core/unitalgebra/getDoubleValue",permalink:"/sst-docs/docs/core/unitalgebra/getDoubleValue",draft:!1,editUrl:"https://github.com/sstsimulator/docs/edit/master/docs/../docs/core/unitalgebra/getDoubleValue.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1678138197,formattedLastUpdatedAt:"Mar 6, 2023",frontMatter:{title:"getDoubleValue"},sidebar:"Core API",previous:{title:"invert",permalink:"/sst-docs/docs/core/unitalgebra/invert"},next:{title:"getRoundedValue",permalink:"/sst-docs/docs/core/unitalgebra/getRoundedValue"}},c={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Header",id:"header",level:2}],d={toc:p},m="wrapper";function b(e){var t=e.components,r=(0,n.Z)(e,o);return(0,l.kt)(m,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"double getDoubleValue() const;\n")),(0,l.kt)("p",null,"Return the value portion of the UnitAlgebra as a double. This discards the units and returns the value in its base units (without SI prefixes). For example, calling ",(0,l.kt)("inlineCode",{parentName:"p"},"getDoubleValue()")," on a unit algebra of ",(0,l.kt)("inlineCode",{parentName:"p"},"4KB")," will return ",(0,l.kt)("inlineCode",{parentName:"p"},"4000.0"),". "),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"returns")," (double) The value portion of the UnitAlgebra as a double.")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'SST::UnitAlgebra* num = new UnitAlgebra("5ms");\ndouble sec = num->getDoubleValue();\n// sec = 0.005\n')),(0,l.kt)("h2",{id:"header"},"Header"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/unitalgebra.h>\n")))}b.isMDXComponent=!0}}]);