"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1944],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,b=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return n?o.createElement(b,a(a({ref:t},p),{},{components:n})):o.createElement(b,a({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<s;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2252:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var o=n(7462),r=n(3366),s=(n(7294),n(3905)),a=["components"],l={title:"SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS",sidebar_label:"Document SubComponent Slots"},i=void 0,c={unversionedId:"core/eli/sst_eli_document_subcomponent_slots",id:"core/eli/sst_eli_document_subcomponent_slots",title:"SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS",description:"List of slots that the (sub)component exposes. A single slot can have multiple subcomponents assigned to it. SST does not allow subcomponents to be loaded into slots that are not documented with this macro.",source:"@site/../docs/core/eli/sst_eli_document_subcomponent_slots.md",sourceDirName:"core/eli",slug:"/core/eli/sst_eli_document_subcomponent_slots",permalink:"/sst-website/docs/core/eli/sst_eli_document_subcomponent_slots",draft:!1,editUrl:"https://github.com/sstsimulator/docs/edit/master/docs/../docs/core/eli/sst_eli_document_subcomponent_slots.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1675712938,formattedLastUpdatedAt:"Feb 6, 2023",frontMatter:{title:"SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS",sidebar_label:"Document SubComponent Slots"},sidebar:"Core API",previous:{title:"Document Statistics",permalink:"/sst-website/docs/core/eli/sst_eli_document_statistics"},next:{title:"SST::Event",permalink:"/sst-website/docs/core/events/class"}},p={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3}],u={toc:m},d="wrapper";function b(e){var t=e.components,n=(0,r.Z)(e,a);return(0,s.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'#define SST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS( \n    { "slot_name_0", "description", "Fully::Qualified::SubComponent::API" },\n    { "slot_name_1", "description", "Fully::Qualified::SubComponent::API" },\n    ...\n    { "slot_name_x", "description", "Fully::Qualified::SubComponent::API" }\n )\n')),(0,s.kt)("p",null,"List of slots that the (sub)component exposes. A single slot can have multiple subcomponents assigned to it. SST does not allow subcomponents to be loaded into slots that are not documented with this macro."),(0,s.kt)("admonition",{title:"Important",type:"info"},(0,s.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,s.kt)("inlineCode",{parentName:"p"},"public")," section of the object's header file.")),(0,s.kt)("h2",{id:"parameters"},"Parameters"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"slot_name_x")," (string) A name for the slot."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"description")," (string) A description of the purpose and/or use of the slot."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"API")," (string) The fully qualified name of the SubComponent API that this slot expects. Any subcomponent loaded into the slot must implement the named API.")),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"example-1"},"Example 1"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'/* simpleElementExample/basicSubComponent_component.h */\nSST_ELI_DOCUMENT_SUBCOMPONENT_SLOTS(\n    { "compute_unit", \n    "The compute unit that this component will use to operate on events",\n    "SST::simpleElementExample::basicSubComponentAPI"}\n)\n')))}b.isMDXComponent=!0}}]);