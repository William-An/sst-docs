"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5388],{96330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=n(85893),a=n(11151);const r={title:"getDefaultTimeBase"},i=void 0,l={id:"core/link/getDefaultTimeBase",title:"getDefaultTimeBase",description:"Parameters",source:"@site/../docs/core/link/getDefaultTimeBase.md",sourceDirName:"core/link",slug:"/core/link/getDefaultTimeBase",permalink:"/sst-docs/docs/core/link/getDefaultTimeBase",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/link/getDefaultTimeBase.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"getDefaultTimeBase"},sidebar:"core",previous:{title:"addRecvLatency",permalink:"/sst-docs/docs/core/link/addRecvLatency"},next:{title:"setDefaultTimeBase",permalink:"/sst-docs/docs/core/link/setDefaultTimeBase"}},o={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"TimeConverter* getDefaultTimeBase();\nconst TimeConverter* getDefaultTimeBase() const;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"returns"})," A TimeConverter* representing the default time base"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Configure a link connected to a port named 'port' \nSST::Link* link = configureLink(\"port\", new Event::Handler<example>(this, &example::handleEvent));\n\n//highlight-next-line\nTimeConverter* tc = link->getDefaultTimeBase();\nOutput* out = getSimulationOutput();\nout->output(\"The link connected to 'port' has a default time base of %s\\n\", tc->getPeriod().toStringBestSI().c_str());\n"})}),"\n",(0,s.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/link.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>i});var s=n(67294);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);