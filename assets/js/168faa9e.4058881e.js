"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6051],{23620:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=t(85893),o=t(11151);const i={title:"SST_ELI_REGISTER_SUBCOMPONENT_DERIVED_API",sidebar_label:"SubComponent Derived API"},r=void 0,l={id:"core/eli/register/sst_eli_register_subcomponent_derived_api",title:"SST_ELI_REGISTER_SUBCOMPONENT_DERIVED_API",description:'If a subcomponent API inherits from another subcomponent API, the "derived" or child API should use this macro to register itself. SubComponents that implement the API registered in this call will inherit all ELI documented by this API as well as any the API inherits from.',source:"@site/../docs/core/eli/register/sst_eli_register_subcomponent_derived_api.md",sourceDirName:"core/eli/register",slug:"/core/eli/register/sst_eli_register_subcomponent_derived_api",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_subcomponent_derived_api",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/eli/register/sst_eli_register_subcomponent_derived_api.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1695940750,formattedLastUpdatedAt:"Sep 28, 2023",frontMatter:{title:"SST_ELI_REGISTER_SUBCOMPONENT_DERIVED_API",sidebar_label:"SubComponent Derived API"},sidebar:"core",previous:{title:"SubComponent API",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_subcomponent_api"},next:{title:"Module",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_module"}},a={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function p(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"SST_ELI_REGISTER_SUBCOMPONENT_DERIVED_API(class_name, parent_class_name)\n"})}),"\n",(0,s.jsx)(n.p,{children:'If a subcomponent API inherits from another subcomponent API, the "derived" or child API should use this macro to register itself. SubComponents that implement the API registered in this call will inherit all ELI documented by this API as well as any the API inherits from.'}),"\n",(0,s.jsx)(n.admonition,{title:"Important",type:"info",children:(0,s.jsxs)(n.p,{children:["This macro must reside in a ",(0,s.jsx)(n.code,{children:"public"})," section of the SubComponent API's header file."]})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"class_name"})," (class) The fully qualified name of the calling class. This is not a string."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"parent_class_name"})," (class) The fully qualified name of the parent class. This API should also be registered with the SST Core."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"In this example, ASubComponentAPI is a SubComponent API class. AMoreSpecificSubComponentAPI is another SubComponent API class that inherits from ASubComponentAPI. AnActualSubComponent is an SST SubComponent that inherits from AMoreSpecificSubComponentAPI. The subcomponent inherits the parameters from both its parent classes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include <sst/core/subcomponent.h>\n\nnamespace SST {\nclass ASubComponentAPI : public SST::SubComponent\n{\npublic:\n    SST_ELI_REGISTER_SUBCOMPONENT_API(SST::ASubComponentAPI)\n\n    SST_ELI_DOCUMENT_PARAMS(\n        { "count", "The count of something", 20 }\n    )\n\n    /* Rest of class here */\n};\n\nclass AMoreSpecificSubComponentAPI : public SST::ASubComponentAPI\n{\npublic:\n//highlight-next-line\n    SST_ELI_REGISTER_SUBCOMPONENT_DERIVED_API(SST::AMoreSpecificSubComponentAPI, SST::ASubComponentAPI)\n\n    SST_ELI_DOCUMENT_PARAMS(\n      { "name", "A name for this subcomponent" }\n    )\n\n    /* Rest of class */\n};\n\nclass AnActualSubComponent : public SST::AMoreSpecificSubComponentAPI\n{\npublic:\n\n    SST_ELI_REGISTER_SUBCOMPONENT(\n        AnActualSubComponent,               // SubComponent class\n        "exampleLibrary",                   // Element library (for Python/library lookup)\n        "mysub",                            // SubComponent name (for Python/library lookup)\n        SST_ELI_ELEMENT_VERSION(1,0,0),     // Version of the component (not related to SST version)\n        "Example of ELI inheritance",       // Description\n        SST::AMoreSpecificSubComponentAPI   // SubComponent API\n    )\n\n    /* The subcomponent \'exampleLibrary.mysub\' will have two parameters: \'count\' and \'name\' */\n\n/* Rest of class */\n};\n} /* End namespace SST */\n'})}),"\n",(0,s.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/subcomponent.h>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var s=t(67294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);