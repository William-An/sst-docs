"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1221],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,f=m["".concat(d,".").concat(u)]||m[u]||o[u]||s;return a?n.createElement(f,l(l({ref:t},c),{},{components:a})):n.createElement(f,l({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=m;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5666:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),l=["components"],i={id:"addData",title:"addData()"},d=void 0,p={unversionedId:"cpp/statistics/addData",id:"cpp/statistics/addData",title:"addData()",description:"Fully Qualified Name",source:"@site/../docs/cpp/statistics/addData.md",sourceDirName:"cpp/statistics",slug:"/cpp/statistics/addData",permalink:"/sst-website/docs/cpp/statistics/addData",draft:!1,editUrl:"https://github.com/sstsimulator/sst-website/edit/master/docs/../docs/cpp/statistics/addData.md",tags:[],version:"current",lastUpdatedBy:"Ryan Ledbetter",lastUpdatedAt:1539909317,formattedLastUpdatedAt:"Oct 19, 2018",frontMatter:{id:"addData",title:"addData()"},sidebar:"C++",previous:{title:"MarsagliaRNG",permalink:"/sst-website/docs/cpp/rng/MarsagliaRNG"},next:{title:"registerStatistic()",permalink:"/sst-website/docs/cpp/statistics/registerStatistic"}},c={},o=[{value:"Fully Qualified Name",id:"fully-qualified-name",level:2},{value:"Remarks",id:"remarks",level:3},{value:"Requirements",id:"requirements",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3},{value:"Example 4",id:"example-4",level:3},{value:"Example 5",id:"example-5",level:3},{value:"See Also",id:"see-also",level:2}],m={toc:o};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"fully-qualified-name"},"Fully Qualified Name"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"SST::Statistics::addData()\n")),(0,s.kt)("h3",{id:"remarks"},"Remarks"),(0,s.kt)("p",null,"Add data to the statistic."),(0,s.kt)("h2",{id:"requirements"},"Requirements"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/component.h>\n")),(0,s.kt)("h2",{id:"syntax"},"Syntax"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"void SST::Statistics::Statistic<T>::addData(T data)\n")),(0,s.kt)("h2",{id:"parameters"},"Parameters"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"data")," - The data to add to the Statistic. Usually this is a number that can represent a count, size, time, etc."),(0,s.kt)("h2",{id:"return-value"},"Return Value"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"None")),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"example-1"},"Example 1"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"stat_GetXReqReceived->addData(1);\n")),(0,s.kt)("h3",{id:"example-2"},"Example 2"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"stat_MSHROccupancy->addData(mshr->getSize());\n")),(0,s.kt)("h3",{id:"example-3"},"Example 3"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"m_evStat->addData( time - m_issueTime );\n")),(0,s.kt)("h3",{id:"example-4"},"Example 4"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"if ( issue( req ) ) {\n    stat_cyclesWithIssue->addData(1);\n} else {\n    stat_cyclesAttemptIssueButRejected->addData(1);\n    break;\n}\n")),(0,s.kt)("h3",{id:"example-5"},"Example 5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"if( !memSystem->getStats( &tbandwidth, TOTAL_BANDWIDTH ) ){\nTBandwidth->addData(tbandwidth);\n}\n\nif( !memSystem->getStats( &bytes_transferred, TOTAL_BYTES_TRANSFERRED ) ){\nBytesTransferred->addData(bytes_transferred);\n}\n\nif( !memSystem->getStats( &total_reads, TOTAL_READS ) ){\nTotalReads->addData(total_reads);\n}\n\nif( !memSystem->getStats( &total_writes, TOTAL_WRITES ) ){\nTotalWrites->addData(total_writes);\n}\n\nif( !memSystem->getStats( &total_xactions, TOTAL_TRANSACTIONS ) ){\nTotalXactions->addData(total_xactions);\n}\n\nif( !memSystem->getStats( &pending_reads, PENDING_READ_TRANSACTIONS ) ){\nPendingReads->addData(pending_reads);\n}\n\nif( !memSystem->getStats( &pending_rtns, PENDING_RTN_TRANSACTIONS ) ){\nPendingRtns->addData(pending_rtns);\n}\n")),(0,s.kt)("h2",{id:"see-also"},"See Also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/sst-website/docs/cpp/component/registerStatistic"},"SST::Component::registerStatistic()"))))}u.isMDXComponent=!0}}]);