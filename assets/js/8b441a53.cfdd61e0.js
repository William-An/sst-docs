"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2567],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,f=c["".concat(l,".").concat(u)]||c[u]||m[u]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={title:"sendInitData"},o=void 0,s={unversionedId:"core/iface/SimpleNetwork/sendInitData",id:"core/iface/SimpleNetwork/sendInitData",title:"sendInitData",description:"This function is deprecated as of SST 13 and will be removed in SST 14. Use sendUntimedData instead.",source:"@site/../docs/core/iface/SimpleNetwork/sendInitData.md",sourceDirName:"core/iface/SimpleNetwork",slug:"/core/iface/SimpleNetwork/sendInitData",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/sendInitData",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/SimpleNetwork/sendInitData.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"sendInitData"},sidebar:"core",previous:{title:"send",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/send"},next:{title:"sendUntimedData",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/sendUntimedData"}},l={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Parameters",id:"parameters-1",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Deprecated",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This function is deprecated as of SST 13 and will be removed in SST 14. Use ",(0,a.kt)("a",{parentName:"p",href:"sendUntimedData"},"sendUntimedData")," instead.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void sendInitData(Request* req);\n")),(0,a.kt)("p",null,"This function is deprecated in favor of ",(0,a.kt)("a",{parentName:"p",href:"sendUntimedData"},"sendUntimedData"),"."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Network interface")," ","\xa0",(0,a.kt)("br",{parentName:"p"}),"\n","May implement this function during the deprecation period. Interfaces ",(0,a.kt)("em",{parentName:"p"},"must")," implement at least one of ",(0,a.kt)("inlineCode",{parentName:"p"},"sendInitData()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"sendUntimedData()"),". In SST 14, interfaces will be required to implement ",(0,a.kt)("inlineCode",{parentName:"p"},"sendUntimedData()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"sendInitData()")," will be removed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Endpoint")," ","\xa0",(0,a.kt)("br",{parentName:"p"}),"\n","May optionally use this function during ",(0,a.kt)("inlineCode",{parentName:"p"},"init()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"complete()")," to send events over the network. Must ",(0,a.kt)("em",{parentName:"p"},"not")," call this function during ",(0,a.kt)("inlineCode",{parentName:"p"},"init()")," until ",(0,a.kt)("inlineCode",{parentName:"p"},"isNetworkInitialized()")," returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"returns")," (Request*) A request if one was received, otherwise nullptr. The caller is responsible for deleting any Request returned.")),(0,a.kt)("h2",{id:"parameters-1"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"req")," (Request*) A ",(0,a.kt)("a",{parentName:"li",href:"Request"},"Request")," to send"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"returns")," none")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"',title:'"Excerpt',from:!0,'sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"':!0},"void LinkControl::sendInitData(SST::Interfaces::SimpleNetwork::Request* req)\n{\n    sendUntimedData(req); // Redirect to the sendUntimedData function\n}\n")),(0,a.kt)("h2",{id:"header"},"Header"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/interfaces/simpleNetwork.h>\n")))}m.isMDXComponent=!0}}]);