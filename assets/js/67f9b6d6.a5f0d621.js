"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4101],{85347:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>d,toc:()=>o});var t=i(85893),s=i(11151);const a={title:"finish"},r=void 0,d={id:"core/iface/StandardMem/finish",title:"finish",description:"See finish() for a description of SST's finish phase and the use of this function. The (Sub)Component that loaded a StandardMem interface should call this function during its own finish() function. A StandardMem interface may implement this function if needed, but it is not required.",source:"@site/../docs/core/iface/StandardMem/finish.md",sourceDirName:"core/iface/StandardMem",slug:"/core/iface/StandardMem/finish",permalink:"/sst-docs/docs/core/iface/StandardMem/finish",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/StandardMem/finish.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"finish"},sidebar:"core",previous:{title:"complete",permalink:"/sst-docs/docs/core/iface/StandardMem/complete"},next:{title:"getLineSize",permalink:"/sst-docs/docs/core/iface/StandardMem/getLineSize"}},c={},o=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Implementing finish() in StandardMem",id:"example-1-implementing-finish-in-standardmem",level:3},{value:"Example 2: Supporting StandardMem&#39;s finish() at an endpoint",id:"example-2-supporting-standardmems-finish-at-an-endpoint",level:3},{value:"Header",id:"header",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"virtual void finish();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"../../component/lifecycle/finish",children:(0,t.jsx)(n.code,{children:"finish()"})})," for a description of SST's finish phase and the use of this function. The (Sub)Component that loaded a StandardMem interface should call this function during its own ",(0,t.jsx)(n.code,{children:"finish()"})," function. A StandardMem interface may implement this function if needed, but it is not required."]}),"\n",(0,t.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Memory interface"})," \xa0",(0,t.jsx)(n.br,{}),"\n","This function is optional."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"})," \xa0",(0,t.jsx)(n.br,{}),"\n","Call ",(0,t.jsx)(n.code,{children:"finish()"})," on the interface during the ",(0,t.jsx)(n.code,{children:"finish()"})," phase as SST does not automatically call this function on SubComponents."]}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1-implementing-finish-in-standardmem",children:"Example 1: Implementing finish() in StandardMem"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/memHierarchy/standardInterface.cc"',children:"void StandardInterface::finish() { /* Empty */ }\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-2-supporting-standardmems-finish-at-an-endpoint",children:"Example 2: Supporting StandardMem's finish() at an endpoint"}),"\n",(0,t.jsxs)(n.p,{children:["An endpoint should call ",(0,t.jsx)(n.code,{children:"finish()"})," on a StandardMem interface in its own ",(0,t.jsx)(n.code,{children:"finish()"})," function."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"void Endpoint::finish() \n{\n    mem_iface->finish();\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/interfaces/stdMem.h>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>r});var t=i(67294);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);