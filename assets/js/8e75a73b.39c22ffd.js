"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9073],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>_});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,_=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(_,s(s({ref:t},p),{},{components:n})):r.createElement(_,s({ref:t},p))}));function _(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>_,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={title:"SST_ELI_REGISTER_COMPONENT_BASE",sidebar_label:"Component Base"},l=void 0,c={unversionedId:"core/eli/register/sst_eli_register_component_base",id:"core/eli/register/sst_eli_register_component_base",title:"SST_ELI_REGISTER_COMPONENT_BASE",description:"This macro enables a class that inherits directly from SST::Component but is not itself a Component (e.g., the class is intended to be a base class for other component classes) to register ELI information and have that information inherited by its child component classes.",source:"@site/../docs/core/eli/register/sst_eli_register_component_base.md",sourceDirName:"core/eli/register",slug:"/core/eli/register/sst_eli_register_component_base",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_component_base",draft:!1,editUrl:"https://github.com/sstsimulator/docs/edit/master/docs/../docs/core/eli/register/sst_eli_register_component_base.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1678138197,formattedLastUpdatedAt:"Mar 6, 2023",frontMatter:{title:"SST_ELI_REGISTER_COMPONENT_BASE",sidebar_label:"Component Base"},sidebar:"Core API",previous:{title:"Component",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_component"},next:{title:"Component Derived Base",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_component_derived_base"}},p={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Header",id:"header",level:2}],d={toc:m},u="wrapper";function _(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"SST_ELI_REGISTER_COMPONENT_BASE(class_name)\n")),(0,o.kt)("p",null,"This macro enables a class that inherits directly from SST::Component but is not itself a Component (e.g., the class is intended to be a base class for other component classes) to register ELI information and have that information inherited by its child component classes."),(0,o.kt)("p",null,"If a class inherits from a class using this macro and that class is an SST Component, it should use the regular ",(0,o.kt)("a",{parentName:"p",href:"sst_eli_register_component"},(0,o.kt)("inlineCode",{parentName:"a"},"SST_ELI_REGISTER_COMPONENT"))," call. If the inheriting class is also not intended to be an SST Component but rather is an intermediate class, it should use the ",(0,o.kt)("a",{parentName:"p",href:"sst_eli_register_component_derived_base"},(0,o.kt)("inlineCode",{parentName:"a"},"SST_ELI_REGISTER_COMPONENT_DERIVED_BASE"))," macro."),(0,o.kt)("admonition",{title:"Important",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,o.kt)("inlineCode",{parentName:"p"},"public")," section of the class's header file.")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"class_name")," (class) The fully qualified name of the class calling the macro. This is not a string.")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"example-1"},"Example 1"),(0,o.kt)("p",null,'In this example, ComponentBaseClass is not itself an SST Component but it has a parameter to take a clock frequency. Its child class, MyComponent, which is an SST Component, will also have the parameter "clockFrequency" because the ELI information will be inherited.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'namespace SST {\nclass ComponentBaseClass : public SST::Component\n{\npublic:\n    SST_ELI_REGISTER_COMPONENT_BASE(SST::ComponentBaseClass)\n\n    SST_ELI_DOCUMENT_PARAMS(\n        { "clockFrequency", "The clock frequency for the component", NULL }\n    )\n\n    /* Rest of class here */\n};\n\nclass MyComponent : public SST::ComponentBaseClass\n{\npublic:\n\n    SST_ELI_REGISTER_COMPONENT(\n        MyComponent,                        // Component class\n        "exampleLibrary",                   // Component library (for Python/library lookup)\n        "mycomponent",                      // Component name (for Python/library lookup)\n        SST_ELI_ELEMENT_VERSION(1,0,0),     // Version of the component (not related to SST version)\n        "Example of ELI inheritance",       // Description\n        COMPONENT_CATEGORY_UNCATEGORIZED    // Category\n    )\n\n/* Rest of class */\n};\n} /* End namespace SST */\n')),(0,o.kt)("h2",{id:"header"},"Header"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <src/sst/component.h>\n")))}_.isMDXComponent=!0}}]);