"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8363],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,h=u["".concat(l,".").concat(d)]||u[d]||p[d]||o;return t?a.createElement(h,s(s({ref:n},m),{},{components:t})):a.createElement(h,s({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6447:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),s=["components"],i={id:"projectDriver",title:"Basics: Simulation Configuration File"},l=void 0,c={unversionedId:"guides/external/projectDriver",id:"guides/external/projectDriver",title:"Basics: Simulation Configuration File",description:"The simulation configuration file is typically written in Python, although other formats are possible. It defines what elements (components, subcomponents, and links) are in a simulation. It also sets params and enables statics on these elements.",source:"@site/../docs/guides/external/projectDriver.md",sourceDirName:"guides/external",slug:"/guides/external/projectDriver",permalink:"/sst-website/docs/guides/external/projectDriver",draft:!1,editUrl:"https://github.com/sstsimulator/sst-website/edit/master/docs/../docs/guides/external/projectDriver.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1666128058,formattedLastUpdatedAt:"Oct 18, 2022",frontMatter:{id:"projectDriver",title:"Basics: Simulation Configuration File"},sidebar:"Guides",previous:{title:"Help Us",permalink:"/sst-website/docs/guides/helpUs"},next:{title:"Basics: Header (.h) Files",permalink:"/sst-website/docs/guides/files/basics_header_files"}},m={},p=[{value:"Examples",id:"examples",level:2},{value:"Example 1: Minimal Configuration File",id:"example-1-minimal-configuration-file",level:3},{value:"Example 2: Configuration File",id:"example-2-configuration-file",level:3},{value:"See Also",id:"see-also",level:2}],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The simulation configuration file is typically written in Python, although other formats are possible. It defines what elements (components, subcomponents, and links) are in a simulation. It also sets params and enables statics on these elements."),(0,o.kt)("p",null,"You are required to create at least one component, though most simulations will contain many elements."),(0,o.kt)("p",null,"To start, create a new Python file and import the SST functions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import sst\n")),(0,o.kt)("p",null,"Below are some examples. For more information on the functions, see the ",(0,o.kt)("a",{parentName:"p",href:"/sst-website/docs/projectDriver/sst/component"},"Configuration")," section."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"example-1-minimal-configuration-file"},"Example 1: Minimal Configuration File"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import sst\n\n# component hello from element exA_helloSST (exA_helloSST.hello) named "Hello World"\nhelloComponent = sst.Component("hello", "exA_helloSST.hello")\nhelloComponent.addParams({\n    "repeats" : "5"\n    })\n')),(0,o.kt)("h3",{id:"example-2-configuration-file"},"Example 2: Configuration File"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import sst\n\n# Component carWash from element carWash (carWash.carWash), named "Main Car Wash"\ncarWashComponent = sst.Component("Main Car Wash", "exC_carWash.carWash")\ncarWashComponent.addParams({\n    "simulationTime" : "24", # simulate 24 hours\n    "tickFreq" : "60s", # process cars every 60 seconds (1 tick = 1 minute)\n    })\n\n# Subcomponent slot "bay" using component bay from element carWash (carWash.bay), number 0\nbaySubcomponent0 = carWashComponent.setSubComponent("bay", "exC_carWash.bay", 0)\nbaySubcomponent0.addParams({\n    "size" : "1", # small car bay\n    "smallCarWashTime" : "3"\n    })\n\n# Subcomponent slot "bay" using component bay from element carWash (carWash.bay), number 1\nbaySubcomponent1 = carWashComponent.setSubComponent("bay", "exC_carWash.bay", 1)\nbaySubcomponent1.addParams({\n    "size" : "2", # large car bay\n    "smallCarWashTime" : "3",\n    "largeCarWashTime" : "5"\n    })\n\n# Subcomponent slot "bay" using component bay from element carWash (carWash.bay), number 2\nbaySubcomponent2 = carWashComponent.setSubComponent("bay", "exC_carWash.bay", 2)\nbaySubcomponent2.addParams({\n    "size" : "2", # large car bay\n    "smallCarWashTime" : "3",\n    "largeCarWashTime" : "5"\n    })\n\n\n# Component carGenerator from element carWash (carWash.carGenerator), named "Car Generator"\ncarGeneratorComponent = sst.Component("Car Generator", "exC_carWash.carGenerator")\ncarGeneratorComponent.addParams({\n    "delay" : "60s", # send a car every 60 seconds (1 tick = 1 minute)\n    "randomseed" : "151515"\n    })\n\n\n# Enable all statistics up to level 1 for the Car Wash and bays\n# In this example that means noCarEvents is NOT enabled\nsst.setStatisticLoadLevel(1)\nsst.enableAllStatisticsForAllComponents()\n#carWashComponent.enableAllStatistics()\n#baySubcomponent0.enableAllStatistics()\n#baySubcomponent1.enableAllStatistics()\n#baySubcomponent2.enableAllStatistics()\n\n# Connect the carWash and carGenerator components\nsst.Link("MyLink").connect( (carWashComponent, "port", "1ps"), (carGeneratorComponent, "port", "1ps") )\n')),(0,o.kt)("h2",{id:"see-also"},"See Also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/sst-website/docs/projectDriver/sst/component"},"Configuration")," - View this section of the site for more information on the functions used to build a simulation.")))}d.isMDXComponent=!0}}]);