"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8590],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69046:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={title:"kingsley"},a=void 0,s={unversionedId:"elements/kingsley/intro",id:"elements/kingsley/intro",title:"kingsley",description:"Kingsley is used to model on-chip networks that us a mesh interconnect.  Kingsley routers are input queued and will self-discover the network configuration, including the ability to have multiple endpoints connected to each router. Kingsley adheres to the SimpleNetwork interface.",source:"@site/../docs/elements/kingsley/intro.md",sourceDirName:"elements/kingsley",slug:"/elements/kingsley/intro",permalink:"/sst-docs/docs/elements/kingsley/intro",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/elements/kingsley/intro.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1702490631,formattedLastUpdatedAt:"Dec 13, 2023",frontMatter:{title:"kingsley"},sidebar:"elements",previous:{title:"juno",permalink:"/sst-docs/docs/elements/juno/intro"},next:{title:"llyr",permalink:"/sst-docs/docs/elements/llyr/intro"}},l={},p=[{value:"Required dependencies",id:"required-dependencies",level:3},{value:"Optional dependencies",id:"optional-dependencies",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Kingsley")," is used to model on-chip networks that us a mesh interconnect.  Kingsley routers are input queued and will self-discover the network configuration, including the ability to have multiple endpoints connected to each router. Kingsley adheres to the ",(0,o.kt)("a",{parentName:"p",href:"../../core/iface/SimpleNetwork/class"},"SimpleNetwork")," interface."),(0,o.kt)("admonition",{title:"At a Glance",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Source Code:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/kingsley"},"sst-elements/.../kingsley")," ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"SST Name:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"kingsley")," ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Maturity Level:")," Prototype (2) ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Development Path:")," Active ","\xa0",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Last Released:")," SST 13.1")),(0,o.kt)("h3",{id:"required-dependencies"},"Required dependencies"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"None")),(0,o.kt)("h3",{id:"optional-dependencies"},"Optional dependencies"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"None")))}u.isMDXComponent=!0}}]);