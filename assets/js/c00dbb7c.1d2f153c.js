"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2042],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,b=m["".concat(p,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(b,i(i({ref:t},c),{},{components:n})):r.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[m]="string"==typeof e?e:o,i[1]=a;for(var l=2;l<s;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},75180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const s={title:"SST_ELI_REGISTER_SUBCOMPONENT_API",sidebar_label:"SubComponent API"},i=void 0,a={unversionedId:"core/eli/register/sst_eli_register_subcomponent_api",id:"core/eli/register/sst_eli_register_subcomponent_api",title:"SST_ELI_REGISTER_SUBCOMPONENT_API",description:"SubComponents implement a specific API and SubComponent slots require any SubComponents loaded into them to implement a specific API. This macro registers SubComponent APIs with SST Core. If a SubComponent API inherits from another registered SubComponent API (as opposed to, for example, SST::SubComponent directly), the API should instead register using the SSTELIREGISTERSUBCOMPONENTDERIVEDAPI macro.",source:"@site/../docs/core/eli/register/sst_eli_register_subcomponent_api.md",sourceDirName:"core/eli/register",slug:"/core/eli/register/sst_eli_register_subcomponent_api",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_subcomponent_api",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/eli/register/sst_eli_register_subcomponent_api.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"SST_ELI_REGISTER_SUBCOMPONENT_API",sidebar_label:"SubComponent API"},sidebar:"core",previous:{title:"SubComponent",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_subcomponent"},next:{title:"SubComponent Derived API",permalink:"/sst-docs/docs/core/eli/register/sst_eli_register_subcomponent_derived_api"}},p={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}],c={toc:l},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"SST_ELI_REGISTER_SUBCOMPONENT_API(class_name)\n")),(0,o.kt)("p",null,"SubComponents implement a specific API and SubComponent slots require any SubComponents loaded into them to implement a specific API. This macro registers SubComponent APIs with SST Core. If a SubComponent API inherits from another registered SubComponent API (as opposed to, for example, SST::SubComponent directly), the API should instead register using the ",(0,o.kt)("a",{parentName:"p",href:"sst_eli_register_subcomponent_derived_api"},(0,o.kt)("inlineCode",{parentName:"a"},"SST_ELI_REGISTER_SUBCOMPONENT_DERIVED_API"))," macro."),(0,o.kt)("admonition",{title:"Important",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,o.kt)("inlineCode",{parentName:"p"},"public")," section of the SubComponent API's header file.")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"class_name")," (class) The name of the SubComponent API class. This is not a string.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'"Excerpt from sst-elements/src/sst/elements/basicSubComponent_subcomponent.h"','"Excerpt':!0,from:!0,'sst-elements/src/sst/elements/basicSubComponent_subcomponent.h"':!0},"class basicSubComponentAPI : public SST::SubComponent\n{\npublic:\n    /* \n     * Register this API with SST so that SST can match subcomponent slots to subcomponents \n     */\n     //highlight-next-line\n    SST_ELI_REGISTER_SUBCOMPONENT_API(SST::simpleElementExample::basicSubComponentAPI)\n \n    basicSubComponentAPI(ComponentId_t id, Params& params) : SubComponent(id) { }\n    virtual ~basicSubComponentAPI() { }\n\n    // These are the two functions described in the comment above\n    virtual int compute( int num ) =0;\n    virtual std::string compute( std::string comp) =0;\n};\n")),(0,o.kt)("h2",{id:"header"},"Header"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/subcomponent.h>\n")))}u.isMDXComponent=!0}}]);