"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8363],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,b=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(b,s(s({ref:t},p),{},{components:n})):r.createElement(b,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6447:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],l={id:"projectDriver",title:"Basics: Project Driver"},i=void 0,c={unversionedId:"guides/external/projectDriver",id:"guides/external/projectDriver",title:"Basics: Project Driver",description:"The project driver is a python file. It defines what elements (components, subcomponents, and links) are in a simulation. It also sets params and enables statics on these elements.",source:"@site/../docs/guides/external/projectDriver.md",sourceDirName:"guides/external",slug:"/guides/external/projectDriver",permalink:"/sst-website/docs/guides/external/projectDriver",draft:!1,editUrl:"https://github.com/sstsimulator/sst-website/edit/master/docs/../docs/guides/external/projectDriver.md",tags:[],version:"current",lastUpdatedBy:"Joseph Kenny",lastUpdatedAt:1664453450,formattedLastUpdatedAt:"Sep 29, 2022",frontMatter:{id:"projectDriver",title:"Basics: Project Driver"},sidebar:"Guides",previous:{title:"Help Us",permalink:"/sst-website/docs/guides/helpUs"},next:{title:"Basics: Header (.h) Files",permalink:"/sst-website/docs/guides/files/basics_header_files"}},p={},m=[{value:"Examples",id:"examples",level:2},{value:"Example 1: Minimal Project Driver",id:"example-1-minimal-project-driver",level:3},{value:"Example 2: Project Driver",id:"example-2-project-driver",level:3},{value:"See Also",id:"see-also",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The project driver is a python file. It defines what elements (components, subcomponents, and links) are in a simulation. It also sets params and enables statics on these elements."),(0,o.kt)("p",null,"You are required to create at least one component, though most simulations will contain many elements."),(0,o.kt)("p",null,"To start, create a new python file and import the SST functions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import sst\n")),(0,o.kt)("p",null,"Below are some examples. For more information on the functions, see the ",(0,o.kt)("a",{parentName:"p",href:"/sst-website/docs/projectDriver/sst/component"},"Project Driver")," section."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"example-1-minimal-project-driver"},"Example 1: Minimal Project Driver"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import sst\n\n# component hello from element exA_helloSST (exA_helloSST.hello) named "Hello World"\nhelloComponent = sst.Component("hello", "exA_helloSST.hello")\nhelloComponent.addParams({\n    "repeats" : "5"\n    })\n')),(0,o.kt)("h3",{id:"example-2-project-driver"},"Example 2: Project Driver"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import sst\n\n# Component carWash from element carWash (carWash.carWash), named "Main Car Wash"\ncarWashComponent = sst.Component("Main Car Wash", "exC_carWash.carWash")\ncarWashComponent.addParams({\n    "simulationTime" : "24", # simulate 24 hours\n    "tickFreq" : "60s", # process cars every 60 seconds (1 tick = 1 minute)\n    })\n\n# Subcomponent slot "bay" using component bay from element carWash (carWash.bay), number 0\nbaySubcomponent0 = carWashComponent.setSubComponent("bay", "exC_carWash.bay", 0)\nbaySubcomponent0.addParams({\n    "size" : "1", # small car bay\n    "smallCarWashTime" : "3"\n    })\n\n# Subcomponent slot "bay" using component bay from element carWash (carWash.bay), number 1\nbaySubcomponent1 = carWashComponent.setSubComponent("bay", "exC_carWash.bay", 1)\nbaySubcomponent1.addParams({\n    "size" : "2", # large car bay\n    "smallCarWashTime" : "3",\n    "largeCarWashTime" : "5"\n    })\n\n# Subcomponent slot "bay" using component bay from element carWash (carWash.bay), number 2\nbaySubcomponent2 = carWashComponent.setSubComponent("bay", "exC_carWash.bay", 2)\nbaySubcomponent2.addParams({\n    "size" : "2", # large car bay\n    "smallCarWashTime" : "3",\n    "largeCarWashTime" : "5"\n    })\n\n\n# Component carGenerator from element carWash (carWash.carGenerator), named "Car Generator"\ncarGeneratorComponent = sst.Component("Car Generator", "exC_carWash.carGenerator")\ncarGeneratorComponent.addParams({\n    "delay" : "60s", # send a car every 60 seconds (1 tick = 1 minute)\n    "randomseed" : "151515"\n    })\n\n\n# Enable all statistics up to level 1 for the Car Wash and bays\n# In this example that means noCarEvents is NOT enabled\nsst.setStatisticLoadLevel(1)\nsst.enableAllStatisticsForAllComponents()\n#carWashComponent.enableAllStatistics()\n#baySubcomponent0.enableAllStatistics()\n#baySubcomponent1.enableAllStatistics()\n#baySubcomponent2.enableAllStatistics()\n\n# Connect the carWash and carGenerator components\nsst.Link("MyLink").connect( (carWashComponent, "port", "1ps"), (carGeneratorComponent, "port", "1ps") )\n')),(0,o.kt)("h2",{id:"see-also"},"See Also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/sst-website/docs/projectDriver/sst/component"},"Project Driver")," - View this section of the site for more information on the functions used to build a simulation.")))}d.isMDXComponent=!0}}]);