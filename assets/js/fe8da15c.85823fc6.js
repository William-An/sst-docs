"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8504],{77428:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var o=t(85893),s=t(11151);const r={title:"isPortConnected"},i=void 0,c={id:"core/component/link/isPortConnected",title:"isPortConnected",description:"Availability: Component, SubComponent, ComponentExtension",source:"@site/../docs/core/component/link/isPortConnected.md",sourceDirName:"core/component/link",slug:"/core/component/link/isPortConnected",permalink:"/sst-docs/docs/core/component/link/isPortConnected",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/component/link/isPortConnected.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1695940750,formattedLastUpdatedAt:"Sep 28, 2023",frontMatter:{title:"isPortConnected"},sidebar:"core",previous:{title:"configureSelfLink",permalink:"/sst-docs/docs/core/component/link/configureSelfLink"},next:{title:"Loadable Objects",permalink:"/sst-docs/docs/category/loadable-objects"}},l={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"bool isPortConnected(const std::string& name) const;\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Availability:"})," Component, SubComponent, ComponentExtension"]}),"\n",(0,o.jsx)(n.p,{children:"Determine if a port is connected to a link."}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"name"})," (string) Name of the port to check"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"returns"})," (bool) Whether the port is connected"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicLinks.cc"',children:'#include <sst/core/component.h>\n\nbasicLinks::basicLinks(ComponentId_t id, Params& params) : Component(id) \n{\n    // This example has a port vector. The ports are named port_vectorX where X is the vector index.\n    // Configure the ports in the vector that are connected.\n    std::string linkprefix = "port_vector";\n    std::string linkname = linkprefix + "0";\n    int portnum = 0;\n    //highlight-next-line\n    while (isPortConnected(linkname)) {\n        SST::Link* link = configureLink(linkname, new Event::Handler<basicLinks,int>(this, &basicLinks::handleWithEventID, portnum));\n        sst_assert(link, CALL_INFO, -1, "Error: Link configuration failed\\n");\n\n        linkVector.push_back(link);\n        portnum++;\n        linkname = linkprefix + std::to_string(portnum);\n    }\n\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/component.h> // or\n#include <sst/core/subcomponent.h> // or\n#include <sst/core/componentExtension.h>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var o=t(67294);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);