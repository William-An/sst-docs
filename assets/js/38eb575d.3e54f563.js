"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1653],{53320:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>c,toc:()=>l});var i=t(85893),s=t(11151);const d={title:"sendUntimedData"},a=void 0,c={id:"core/link/sendUntimedData",title:"sendUntimedData",description:"Send an event during SST's init() or complete() phase.",source:"@site/../docs/core/link/sendUntimedData.md",sourceDirName:"core/link",slug:"/core/link/sendUntimedData",permalink:"/sst-docs/docs/core/link/sendUntimedData",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/link/sendUntimedData.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"sendUntimedData"},sidebar:"core",previous:{title:"setDefaultTimeBase",permalink:"/sst-docs/docs/core/link/setDefaultTimeBase"},next:{title:"recvUntimedData",permalink:"/sst-docs/docs/core/link/recvUntimedData"}},r={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"void sendUntimedData(Event* data);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Send an event during SST's ",(0,i.jsx)(n.a,{href:"../component/lifecycle/init",children:(0,i.jsx)(n.code,{children:"init()"})})," or ",(0,i.jsx)(n.a,{href:"../component/lifecycle/complete",children:(0,i.jsx)(n.code,{children:"complete()"})})," phase."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"sendInitData"})," and ",(0,i.jsx)(n.code,{children:"sendUntimedData"})," functions are identical. The latter was added when SST added the ",(0,i.jsx)(n.code,{children:"complete()"})," phase to indicate that it could be used during ",(0,i.jsx)(n.em,{children:"any"})," untimed phase, not just ",(0,i.jsx)(n.code,{children:"init()"}),". ",(0,i.jsx)(n.code,{children:"sendInitData"})," may eventually be deprecated in favor of ",(0,i.jsx)(n.code,{children:"sendUntimedData"}),"."]})]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data"})," (Event*) Event to send"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/simpleElementExample/basicSimLifeCycle.cc"',children:"void basicSimLifeCycle::init(unsigned int phase) {\n\n    // Only send our info on phase 0\n    if (phase == 0) {\n        basicLifeCycleEvent* event = new basicLifeCycleEvent(getName(), eventsToSend);\n        //highlight-next-line\n        leftLink->sendUntimedData(event);\n    }\n\n    /** Rest of init() handling **/\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/link.h>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>a});var i=t(67294);const s={},d=i.createContext(s);function a(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);