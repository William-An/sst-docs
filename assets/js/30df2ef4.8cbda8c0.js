"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8371],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=i,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},34265:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const a={title:"setup"},o=void 0,p={unversionedId:"core/iface/SimpleNetwork/setup",id:"core/iface/SimpleNetwork/setup",title:"setup",description:"See setup() for a description of SST's setup phase and the use of this function. The (Sub)Component that loaded a SimpleNetwork interface should call this function during its own setup() function. A SimpleNetwork interface may implement this function if needed, but it is not required.",source:"@site/../docs/core/iface/SimpleNetwork/setup.md",sourceDirName:"core/iface/SimpleNetwork",slug:"/core/iface/SimpleNetwork/setup",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/setup",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/SimpleNetwork/setup.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"setup"},sidebar:"core",previous:{title:"init",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/init"},next:{title:"complete",permalink:"/sst-docs/docs/core/iface/SimpleNetwork/complete"}},l={},s=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Implementing setup() in a SimpleNetwork",id:"example-1-implementing-setup-in-a-simplenetwork",level:3},{value:"Example 2: Supporting SimpleNetwork&#39;s setup() at an endpoint",id:"example-2-supporting-simplenetworks-setup-at-an-endpoint",level:3},{value:"Header",id:"header",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void setup();\n")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../../component/lifecycle/setup"},(0,i.kt)("inlineCode",{parentName:"a"},"setup()"))," for a description of SST's setup phase and the use of this function. The (Sub)Component that loaded a SimpleNetwork interface should call this function during its own ",(0,i.kt)("inlineCode",{parentName:"p"},"setup()")," function. A SimpleNetwork interface may implement this function if needed, but it is not required."),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Network interface")," ","\xa0",(0,i.kt)("br",{parentName:"p"}),"\n","This function may be optionally implemented."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Endpoint")," ","\xa0",(0,i.kt)("br",{parentName:"p"}),"\n","Call ",(0,i.kt)("inlineCode",{parentName:"p"},"setup()")," on the interface during the ",(0,i.kt)("inlineCode",{parentName:"p"},"setup()")," phase as SST does not automatically call this function on SubComponents. "),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"returns")," none")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"example-1-implementing-setup-in-a-simplenetwork"},"Example 1: Implementing setup() in a SimpleNetwork"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"',title:'"Excerpt',from:!0,'sst-elements/src/sst/elements/merlin/interfaces/linkControl.cc"':!0},"// The LinkControl's setup function clears out its `init_events` queue\nvoid LinkControl::setup()\n{\n    while ( init_events.size() ) {\n        delete init_events.front();\n        init_events.pop_front();\n    }\n}\n")),(0,i.kt)("h3",{id:"example-2-supporting-simplenetworks-setup-at-an-endpoint"},"Example 2: Supporting SimpleNetwork's setup() at an endpoint"),(0,i.kt)("p",null,"An endpoint should call ",(0,i.kt)("inlineCode",{parentName:"p"},"setup()")," on a SimpleNetwork interface in its own ",(0,i.kt)("inlineCode",{parentName:"p"},"setup()")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"void Endpoint::setup() \n{\n    net_iface->setup();\n}\n")),(0,i.kt)("h2",{id:"header"},"Header"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/interfaces/simpleNetwork.h>\n")))}m.isMDXComponent=!0}}]);