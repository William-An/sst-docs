"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3441],{40272:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var n=s(85893),r=s(11151);const a={title:"hasUnits"},i=void 0,l={id:"core/unitalgebra/hasUnits",title:"hasUnits",description:"Return whether the UnitAlgebra has the units specified in the parameter.",source:"@site/../docs/core/unitalgebra/hasUnits.md",sourceDirName:"core/unitalgebra",slug:"/core/unitalgebra/hasUnits",permalink:"/sst-docs/docs/core/unitalgebra/hasUnits",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/unitalgebra/hasUnits.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"hasUnits"},sidebar:"core",previous:{title:"getValue",permalink:"/sst-docs/docs/core/unitalgebra/getValue"},next:{title:"isValueZero",permalink:"/sst-docs/docs/core/unitalgebra/isValueZero"}},c={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"bool hasUnits(const std::string& units) const;\n"})}),"\n",(0,n.jsx)(t.p,{children:"Return whether the UnitAlgebra has the units specified in the parameter."}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"units"})," (std::string) Units to compare against"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"returns"})," Whether the UnitAlgebra has the specified units."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'SST::UnitAlgebra* num = new UnitAlgebra("4MB/s");\n\nbool isBandwidth = num->hasUnits("B/s");\n'})}),"\n",(0,n.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/unitalgebra.h>\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>l,a:()=>i});var n=s(67294);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);