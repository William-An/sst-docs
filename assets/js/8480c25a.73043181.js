"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7378],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(r),d=n,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return r?a.createElement(f,i(i({ref:t},m),{},{components:r})):a.createElement(f,i({ref:t},m))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7308:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],l={title:"SST_ELI_DOCUMENT_PARAMS",sidebar_label:"Document Parameters"},p=void 0,s={unversionedId:"core/eli/sst_eli_document_params",id:"core/eli/sst_eli_document_params",title:"SST_ELI_DOCUMENT_PARAMS",description:"Availability: Component, SubComponent, Module, ProfilePoint",source:"@site/../docs/core/eli/sst_eli_document_params.md",sourceDirName:"core/eli",slug:"/core/eli/sst_eli_document_params",permalink:"/docs/docs/core/eli/sst_eli_document_params",draft:!1,editUrl:"https://github.com/sstsimulator/docs/edit/master/docs/../docs/core/eli/sst_eli_document_params.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1675712938,formattedLastUpdatedAt:"Feb 6, 2023",frontMatter:{title:"SST_ELI_DOCUMENT_PARAMS",sidebar_label:"Document Parameters"},sidebar:"Core API",previous:{title:"Register SubComponent",permalink:"/docs/docs/core/eli/sst_eli_register_subcomponent"},next:{title:"Document Ports",permalink:"/docs/docs/core/eli/sst_eli_document_ports"}},m={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3}],u={toc:c},d="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'/* Macro */\nSST_ELI_DOCUMENT_PARAMS ( \n    { "param_name0", "description", "default_value" },\n    { "param_name1", "description", "default_value" },\n    { "param_name2", "description", "default_value" },\n    ...\n    { "param_nameX", "description", "default_value" }\n )\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Availability:")," Component, SubComponent, Module, ProfilePoint"),(0,o.kt)("p",null,"Use this macro to register the parameters that an SST object accepts. The macro accepts a list of triples where each triple contains the name of the parameter, a description of the parameter, and, optionally a default value. All fields are provided as strings."),(0,o.kt)("admonition",{title:"Important",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,o.kt)("inlineCode",{parentName:"p"},"public")," section of the object's header file.")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"param_nameX")," (string) The name of the parameter.\n",(0,o.kt)("strong",{parentName:"p"},"description")," (string) Description of the parameter. This value is displayed when sst-info is run at the command line.\n",(0,o.kt)("strong",{parentName:"p"},"default_value")," (string) Optional, a default value that the object assigns the parameter if the parameter is not given in the SST configuration file. If a parameter is required, make this NULL or omit it."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"example-1"},"Example 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'/* simpleElementExample/basicParams.h */\n SST_ELI_DOCUMENT_PARAMS(\n    { "int_param",      "Integer parameter",    NULL },     // Required parameter\n    { "bool_param",     "Boolean parameter",    "false"},   // Optional parameter\n    { "string_param",   "String parameter",     "hello"},\n    { "uint32_param",   "uint32_t parameter",   "400"},\n    { "double_param",   "double parameter",     "12.5"},\n    { "ua_param",       "UnitAlgebra parameter","2TB/s"},\n    { "example_param",  "ExampleType parameter","key:5"},\n    { "array_param",    "array parameter",      "[]"},\n)\n\n/* simpleElementExample/example0.h */\nSST_ELI_DOCUMENT_PARAMS(\n    { "eventsToSend", "How many events this component should send.", NULL},\n    { "eventSize",    "Payload size for each event, in bytes.", "16"}\n)\n')))}f.isMDXComponent=!0}}]);