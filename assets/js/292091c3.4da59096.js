"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6166],{66686:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var d=t(74848),s=t(28453);const a={title:"addSendLatency"},c=void 0,r={id:"core/link/addSendLatency",title:"addSendLatency",description:"Set additional latency to be added to all events that are sent out on this link.",source:"@site/../docs/core/link/addSendLatency.md",sourceDirName:"core/link",slug:"/core/link/addSendLatency",permalink:"/sst-docs/docs/core/link/addSendLatency",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/link/addSendLatency.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1716583959e3,frontMatter:{title:"addSendLatency"},sidebar:"core",previous:{title:"replaceFunctor",permalink:"/sst-docs/docs/core/link/replaceFunctor"},next:{title:"addRecvLatency",permalink:"/sst-docs/docs/core/link/addRecvLatency"}},i={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function o(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"void addSendLatency(int cycles, const std::string& timebase);\nvoid addSendLatency(SimTime_t cycles, TimeConverter* timebase);\n"})}),"\n",(0,d.jsx)(n.p,{children:"Set additional latency to be added to all events that are sent out on this link."}),"\n",(0,d.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"cycles"})," (int or SimTime_t) number of cycles of latency to add"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"timebase"})," (std::string or TimeConverter*) Base units for cycles"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:'// Configure a link connected to a port named \'port\' \nSST::Link* link = configureLink("port", new Event::Handler2<example,&example::handleEvent>(this));\n\n// Add 20ns of latency\nlink->addSendLatency(1, "20ns");\n\n// Add 4*1ns = 4ns of latency\nlink->addSendLatency(4, "1GHz");\n\n// Total latency will be 20ns + 4ns + <amount configured on link in input file> \n'})}),"\n",(0,d.jsx)(n.h2,{id:"header",children:"Header"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"#include <sst/core/link.h>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var d=t(96540);const s={},a=d.createContext(s);function c(e){const n=d.useContext(a);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),d.createElement(a.Provider,{value:n},e.children)}}}]);