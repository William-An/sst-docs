"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4101],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,u=d["".concat(l,".").concat(f)]||d[f]||m[f]||i;return n?r.createElement(u,o(o({ref:t},c),{},{components:n})):r.createElement(u,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},23015:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={title:"finish"},o=void 0,s={unversionedId:"core/iface/StandardMem/finish",id:"core/iface/StandardMem/finish",title:"finish",description:"See finish() for a description of SST's finish phase and the use of this function. The (Sub)Component that loaded a StandardMem interface should call this function during its own finish() function. A StandardMem interface may implement this function if needed, but it is not required.",source:"@site/../docs/core/iface/StandardMem/finish.md",sourceDirName:"core/iface/StandardMem",slug:"/core/iface/StandardMem/finish",permalink:"/sst-docs/docs/core/iface/StandardMem/finish",draft:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/iface/StandardMem/finish.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"finish"},sidebar:"core",previous:{title:"complete",permalink:"/sst-docs/docs/core/iface/StandardMem/complete"},next:{title:"getLineSize",permalink:"/sst-docs/docs/core/iface/StandardMem/getLineSize"}},l={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Implementing finish() in StandardMem",id:"example-1-implementing-finish-in-standardmem",level:3},{value:"Example 2: Supporting StandardMem&#39;s finish() at an endpoint",id:"example-2-supporting-standardmems-finish-at-an-endpoint",level:3},{value:"Header",id:"header",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"virtual void finish();\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"../../component/lifecycle/finish"},(0,a.kt)("inlineCode",{parentName:"a"},"finish()"))," for a description of SST's finish phase and the use of this function. The (Sub)Component that loaded a StandardMem interface should call this function during its own ",(0,a.kt)("inlineCode",{parentName:"p"},"finish()")," function. A StandardMem interface may implement this function if needed, but it is not required."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Memory interface")," ","\xa0",(0,a.kt)("br",{parentName:"p"}),"\n","This function is optional."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Endpoint")," ","\xa0",(0,a.kt)("br",{parentName:"p"}),"\n","Call ",(0,a.kt)("inlineCode",{parentName:"p"},"finish()")," on the interface during the ",(0,a.kt)("inlineCode",{parentName:"p"},"finish()")," phase as SST does not automatically call this function on SubComponents. "),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"returns")," none")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"example-1-implementing-finish-in-standardmem"},"Example 1: Implementing finish() in StandardMem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="Excerpt from sst-elements/src/sst/elements/memHierarchy/standardInterface.cc"',title:'"Excerpt',from:!0,'sst-elements/src/sst/elements/memHierarchy/standardInterface.cc"':!0},"void StandardInterface::finish() { /* Empty */ }\n")),(0,a.kt)("h3",{id:"example-2-supporting-standardmems-finish-at-an-endpoint"},"Example 2: Supporting StandardMem's finish() at an endpoint"),(0,a.kt)("p",null,"An endpoint should call ",(0,a.kt)("inlineCode",{parentName:"p"},"finish()")," on a StandardMem interface in its own ",(0,a.kt)("inlineCode",{parentName:"p"},"finish()")," function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"void Endpoint::finish() \n{\n    mem_iface->finish();\n}\n")),(0,a.kt)("h2",{id:"header"},"Header"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <sst/core/interfaces/stdMem.h>\n")))}m.isMDXComponent=!0}}]);