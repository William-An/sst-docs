"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8309],{24786:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=s(85893),a=s(11151);const r={title:"pushNamePrefix"},i=void 0,o={id:"config/general/pushNamePrefix",title:"pushNamePrefix",description:"Pushes a name prefix onto the name stack. This prefix will be added on the names of all Components and Links. The names in the stack are separated by a period. Example, if pushNamePrefix(\u201cbase\u201d) and pushNamePrefix(\u201cnext\u201d) were called in that order, the prefixed name would be \u201cbase.next\u201d. Prefixes can be popped from the stack using popNamePrefix().",source:"@site/../docs/config/general/pushNamePrefix.md",sourceDirName:"config/general",slug:"/config/general/pushNamePrefix",permalink:"/sst-docs/docs/config/general/pushNamePrefix",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/config/general/pushNamePrefix.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"pushNamePrefix"},sidebar:"config",previous:{title:"setSSTThreadCount",permalink:"/sst-docs/docs/config/general/setSSTThreadCount"},next:{title:"popNamePrefix",permalink:"/sst-docs/docs/config/general/popNamePrefix"}},l={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Import",id:"import",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Pushes a name prefix onto the name stack. This prefix will be added on the names of all Components and Links. The names in the stack are separated by a period. Example, if ",(0,t.jsx)(n.code,{children:"pushNamePrefix(\u201cbase\u201d)"})," and ",(0,t.jsx)(n.code,{children:"pushNamePrefix(\u201cnext\u201d)"})," were called in that order, the prefixed name would be ",(0,t.jsx)(n.code,{children:"\u201cbase.next\u201d"}),". Prefixes can be popped from the stack using ",(0,t.jsx)(n.code,{children:"popNamePrefix()"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"sst.pushNamePrefix(prefix)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"prefix"})," : (type: string) prefix to add to the name stack"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import sst\n\ncomp0 = sst.Component("c0", "simpleElementExample.example0") # Name is \'c0\'\n\n#highlight-next-line\nsst.pushNamePrefix("base")\n\ncomp1 = sst.Component("c1", "simpleElementExample.example0") # Name is \'base.c1\'\n'})}),"\n",(0,t.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import sst\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>i});var t=s(67294);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);