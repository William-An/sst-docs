"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8984],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var i=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,s=function(e,t){if(null==e)return{};var n,i,s={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=i.createContext({}),c=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=s,b=u["".concat(o,".").concat(d)]||u[d]||m[d]||r;return n?i.createElement(b,a(a({ref:t},p),{},{components:n})):i.createElement(b,a({ref:t},p))}));function b(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:s,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9054:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var i=n(7462),s=n(3366),r=(n(7294),n(3905)),a=["components"],l={title:"SST_ELI_DOCUMENT_STATISTICS",sidebar_label:"Document Statistics"},o=void 0,c={unversionedId:"core/eli/sst_eli_document_statistics",id:"core/eli/sst_eli_document_statistics",title:"SST_ELI_DOCUMENT_STATISTICS",description:"Availability: Components and SubComponents",source:"@site/../docs/core/eli/sst_eli_document_statistics.md",sourceDirName:"core/eli",slug:"/core/eli/sst_eli_document_statistics",permalink:"/sst-website/docs/core/eli/sst_eli_document_statistics",draft:!1,editUrl:"https://github.com/sstsimulator/docs/edit/master/docs/../docs/core/eli/sst_eli_document_statistics.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1675712938,formattedLastUpdatedAt:"Feb 6, 2023",frontMatter:{title:"SST_ELI_DOCUMENT_STATISTICS",sidebar_label:"Document Statistics"},sidebar:"Core API",previous:{title:"Document Ports",permalink:"/sst-website/docs/core/eli/sst_eli_document_ports"},next:{title:"Document SubComponent Slots",permalink:"/sst-website/docs/core/eli/sst_eli_document_subcomponent_slots"}},p={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3}],m={toc:u},d="wrapper";function b(e){var t=e.components,n=(0,s.Z)(e,a);return(0,r.kt)(d,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#define SST_ELI_DOCUMENT_STATISTICS( \n    { "stat_0", "description", "units", enable_level },\n    { "stat_1", "description", "units", enable_level },\n    ...\n    { "stat_x", "description", "units", enable_level }\n)\n')),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Availability:")," Components and SubComponents"),(0,r.kt)("admonition",{title:"Important",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This macro must reside in a ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," section of the object's header file.")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"stat_x")," (string) Name of the statistic"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"description")," (string) Description of the statistic. This value is displayed when sst-info is run at the command line."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"units")," (string) Units for the statistic's value. For example 'cycles' or 'MB'. This value is displayed when sst-info is run at the command line."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"enable_level")," (int) Integer between 1 and 7. The statistic will be generated if the user configures the simulation enable level to be greater than or equal to this number.")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"example-1"},"Example 1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'/* simpleElementExample/example1.h */\nSST_ELI_DOCUMENT_STATISTICS( \n    {"EventSizeReceived", "Records the payload size of each event received", "bytes", 1}\n)\n\n/* simpleElementExample/basicStatistics.h */\nSST_ELI_DOCUMENT_STATISTICS(\n    {"UINT32_statistic", "Statistic that records unsigned 32-bit values", "unitless", 1},\n    {"UINT32_statistic_duplicate", "Statistic that records unsigned 32-bit values. Multiple stats record values to this statistic.", "unitless", 1},\n    {"UINT64_statistic", "Statistic that records unsigned 64-bit values", "unitless", 2},\n    {"INT32_statistic",  "Statistic that records signed 32-bit values", "unitless", 3},\n    {"INT64_statistic",  "Statistic that records signed 64-bit values", "unitless", 3},\n    {"SUBID_statistic", "Statistic to demonstrate SubIDs to obtain multiple instances of the same statistic name. Type is double.", "unitless", 4},\n)\n')))}b.isMDXComponent=!0}}]);