"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8234],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var r=n(7294);function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){s(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,s=function(t,e){if(null==t)return{};var n,r,s={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(s[n]=t[n]);return s}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(s[n]=t[n])}return s}var c=r.createContext({}),l=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=l(t.components);return r.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,s=t.mdxType,i=t.originalType,c=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),d=l(n),m=s,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:e},p),{},{components:n})):r.createElement(f,a({ref:e},p))}));function m(t,e){var n=arguments,s=e&&e.mdxType;if("string"==typeof t||s){var i=n.length,a=new Array(i);a[0]=d;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:s,a[1]=o;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1714:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),s=n(3366),i=(n(7294),n(3905)),a=["components"],o={id:"registerStatistic",title:"registerStatistic()"},c=void 0,l={unversionedId:"cpp/component/registerStatistic",id:"cpp/component/registerStatistic",title:"registerStatistic()",description:"Fully Qualified Name",source:"@site/../docs/cpp/component/registerStatistic.md",sourceDirName:"cpp/component",slug:"/cpp/component/registerStatistic",permalink:"/sst-website/docs/cpp/component/registerStatistic",draft:!1,editUrl:"https://github.com/sstsimulator/sst-website/edit/master/docs/../docs/cpp/component/registerStatistic.md",tags:[],version:"current",lastUpdatedBy:"Joseph Kenny",lastUpdatedAt:1664453450,formattedLastUpdatedAt:"Sep 29, 2022",frontMatter:{id:"registerStatistic",title:"registerStatistic()"},sidebar:"C++",previous:{title:"registerClock()",permalink:"/sst-website/docs/cpp/component/registerClock"},next:{title:"setup()",permalink:"/sst-website/docs/cpp/component/setup"}},p={},u=[{value:"Fully Qualified Name",id:"fully-qualified-name",level:2}],d={toc:u};function m(t){var e=t.components,n=(0,s.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"fully-qualified-name"},"Fully Qualified Name"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'SST::BaseComponent::registerStatistic()\n```cpp\n\n### Remarks\nRegisters a statistic.\n\nIf statistics are allowed to run (controlled by [Project Driver](/sst-website/docs/guides/external/projectDriver)), then a statistic will be created and returned. If not allowed to run, then a NullStatistic will be returned. In either case, the returned value should be used for all future statistic calls. The type of Statistic and the Collection Rate is set by [Project Driver](/sst-website/docs/guides/external/projectDriver) parameters. If no type is defined, then an Accumulator Statistic will be provided by default. If the rate is set to 0 or not provided, then the statistic will output results only at end of sim (if output is enabled).\n\n## Requirements\n\n```cpp\n#include <sst/core/component.h>\n```cpp\n\n## Syntax\n\n```cpp\n// #1\nStatistic<T>* SST::BaseComponent::registerStatistic(std::string statName, std::string statSubId = "")\n\n// #2 - same as #1, but automatically converts char* to std::string\nStatistic<T>* SST::BaseComponent::registerStatistic(const char* statName, const char* statSubId = "")\n```cpp\n\n## Parameters\n\n**statName** - Primary name of the statistic. This name must match the defined ElementInfoStatistic in the component, and must also be enabled in the [Project Driver](/sst-website/docs/guides/external/projectDriver). \n\n**statSubId** - An additional substitute name for the statistic.\n\n## Return Value\n\n**Statistic<T>\\*** - Either a created statistic of the desired type or a NullStatistic, depending upon runtime settings.\n\n## Examples\n\n### Example 1\n```cpp\nchar* subID = (char*) malloc(sizeof(char) * 32);\nsprintf(subID, "%" PRIu32, thisCoreID);\n\nStatistic<uint64_t>* statReadRequests  = own->registerStatistic<uint64_t>( "read_requests", subID );\n```cpp\n\n###\n```cpp\nsmallCarsWashed = registerStatistic<int>("smallCarsWashed");\n    largeCarsWashed = registerStatistic<int>("largeCarsWashed");\n    noCarEvents = registerStatistic<int>("noCarEvents");\n    smallCarsWaiting = registerStatistic<int>("smallCarsWaiting");\n    largeCarsWaiting = registerStatistic<int>("largeCarsWaiting");\n```cpp\n\n## See Also\n\n- [SST::Statistics::addData()](/sst-website/docs/cpp/statistics/addData)\n- Project Driver Functions\n  - [sst.setStatisticLoadLevel](/sst-website/docs/projectDriver/sst/setStatisticLoadLevel)\n  - [sst.enableAllStatisticsForAllComponents](/sst-website/docs/projectDriver/sst/enableAllStatisticsForAllComponents)\n  - [enableAllStatistics](/sst-website/docs/projectDriver/component/enableAllStatistics)\n')))}m.isMDXComponent=!0}}]);