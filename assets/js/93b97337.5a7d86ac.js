"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8262],{79574:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=r(85893),o=r(11151);const s={title:"getPeriod"},c=void 0,i={id:"core/timeconverter/getPeriod",title:"getPeriod",description:"Returns a UnitAlgebra representing the clock period captured by this TimeConverter.",source:"@site/../docs/core/timeconverter/getPeriod.md",sourceDirName:"core/timeconverter",slug:"/core/timeconverter/getPeriod",permalink:"/sst-docs/docs/core/timeconverter/getPeriod",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/timeconverter/getPeriod.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1695940750,formattedLastUpdatedAt:"Sep 28, 2023",frontMatter:{title:"getPeriod"},sidebar:"core",previous:{title:"getFactor",permalink:"/sst-docs/docs/core/timeconverter/getFactor"},next:{title:"sst_types",permalink:"/sst-docs/docs/core/types/class"}},a={},d=[{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"UnitAlgebra getPeriod() const;\n"})}),"\n",(0,n.jsx)(t.p,{children:"Returns a UnitAlgebra representing the clock period captured by this TimeConverter."}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'#include <sst/core/timeConverter.h>\nexample::example(ComponentId_t id, Params& params) : Component(id) \n{\n    TimeConverter* converter = registerClock("200MHz", new Clock::Handler<example>(this, &example::clockHandler));\n\n    Output* out = getSimulationOutput();\n    // Prints "Registered a 200MHz clock."\n    //highlight-start\n    out->output("Registered a %s clock.",\n        converter->getPeriod().toStringBestSI().c_str());\n    //highlight-end\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/timeConverter.h\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>c});var n=r(67294);const o={},s=n.createContext(o);function c(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);