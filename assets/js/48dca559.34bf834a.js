"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2984],{54185:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=n(74848),r=n(28453);const a={title:"balar"},i=void 0,o={id:"elements/balar/intro",title:"balar",description:"The BalarTestCPU component is a trace-based test CPU that is included inside balarMMIO to run simulations with CUDA API call traces and data collected from a real GPU. It works by consuming a trace file and associated CUDA memory copy data files. The cudaMemcpyH2D data payload is collected for program correctness. The cudaMemcpyD2H data is collected to validate computation.",source:"@site/../docs/elements/balar/intro.md",sourceDirName:"elements/balar",slug:"/elements/balar/intro",permalink:"/sst-docs/docs/elements/balar/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/elements/balar/intro.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1716583959e3,frontMatter:{title:"balar"},sidebar:"elements",previous:{title:"ariel",permalink:"/sst-docs/docs/elements/ariel/intro"},next:{title:"cacheTracer",permalink:"/sst-docs/docs/elements/cacheTracer/intro"}},l={},d=[{value:"Required dependencies",id:"required-dependencies",level:3},{value:"Optional dependencies",id:"optional-dependencies",level:3},{value:"Additional documentation",id:"additional-documentation",level:2}];function c(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.em,{children:"BalarTestCPU"})," component is a trace-based test CPU that is included inside ",(0,s.jsx)(t.code,{children:"balarMMIO"})," to run simulations with CUDA API call traces and data collected from a real GPU. It works by consuming a trace file and associated CUDA memory copy data files. The cudaMemcpyH2D data payload is collected for program correctness. The cudaMemcpyD2H data is collected to validate computation."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"BalarMMIO"})," is responsible for relaying CUDA API requests from SST to GPGPU-Sim. Currently it supports running with CUDA traces without a real CPU model (with BalarTestCPU) or with a ",(0,s.jsx)(t.a,{href:"../vanadis/intro",children:"Vanadis"})," core (under active development with limited support for MIPS32 and no support for RV64)."]}),"\n",(0,s.jsx)(t.admonition,{title:"At a Glance",type:"note",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Source code:"})," ",(0,s.jsx)(t.a,{href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/balar",children:"sst-elements/.../balar"})," \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"SST name:"})," ",(0,s.jsx)(t.code,{children:"balar"})," \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Maturity Level:"})," Prototype (2) \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Development Path:"})," Active \xa0",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Last Released:"})," SST 14.0"]})}),"\n",(0,s.jsx)(t.h3,{id:"required-dependencies",children:"Required dependencies"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"CUDA"})," Version 10.1 is recommended"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"GPGPUSim"})," A link to the GPGPUSim version can be found in balar's ",(0,s.jsx)(t.a,{href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/balar/README.md",children:"README"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"optional-dependencies",children:"Optional dependencies"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"None"})}),"\n",(0,s.jsx)(t.h2,{id:"additional-documentation",children:"Additional documentation"}),"\n",(0,s.jsxs)(t.p,{children:["A detailed ",(0,s.jsx)(t.a,{href:"https://github.com/sstsimulator/sst-elements/tree/master/src/sst/elements/balar/README.md",children:"README"})," on the balar element can be found in the balar source code."]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(96540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);