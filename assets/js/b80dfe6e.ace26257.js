"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[483],{50077:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>i,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var r=s(85893),o=s(11151);const l={title:"setVerboseLevel"},n=void 0,a={id:"core/output/setVerboseLevel",title:"setVerboseLevel",description:"Sets the Output's verboselevel for debug() and verbose(). Output object will only output the message if those calls' outputlevel parameter are less than or equal to the Output's verbose_level.",source:"@site/../docs/core/output/setVerboseLevel.md",sourceDirName:"core/output",slug:"/core/output/setVerboseLevel",permalink:"/sst-docs/docs/core/output/setVerboseLevel",draft:!1,unlisted:!1,editUrl:"https://github.com/sstsimulator/sst-docs/edit/master/docs/../docs/core/output/setVerboseLevel.md",tags:[],version:"current",lastUpdatedBy:"grvosku",lastUpdatedAt:1684522150,formattedLastUpdatedAt:"May 19, 2023",frontMatter:{title:"setVerboseLevel"},sidebar:"core",previous:{title:"getVerboseLevel",permalink:"/sst-docs/docs/core/output/getVerboseLevel"},next:{title:"getVerboseMask",permalink:"/sst-docs/docs/core/output/getVerboseMask"}},c={},u=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Header",id:"header",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"void setVerboseLevel(uint32_t verbose_level);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Sets the Output's verbose_level for ",(0,r.jsx)(t.a,{href:"debug",children:(0,r.jsx)(t.code,{children:"debug()"})})," and ",(0,r.jsx)(t.a,{href:"verbose",children:(0,r.jsx)(t.code,{children:"verbose()"})}),". Output object will only output the message if those calls' ",(0,r.jsx)(t.code,{children:"output_level"})," parameter are less than or equal to the Output's verbose_level."]}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"verbose_level"})," (uint32_t) The level to set the Output's verbose_level to"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"returns"})," none"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"out->setVerboseLevel(8); // Calls to out->debug() or out->verbose() with level > 8 will not be printed\n"})}),"\n",(0,r.jsx)(t.h2,{id:"header",children:"Header"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"#include <sst/core/output.h>\n"})})]})}function i(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>n});var r=s(67294);const o={},l=r.createContext(o);function n(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);